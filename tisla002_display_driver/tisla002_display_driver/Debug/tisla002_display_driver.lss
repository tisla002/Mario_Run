
tisla002_display_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  000002d4  00000368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800124  00800124  0000038c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c4e  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091d  00000000  00000000  000010ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004d5  00000000  00000000  000019d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00001eac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d4  00000000  00000000  00001fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000249  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000026f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	7e c0       	rjmp	.+252    	; 0x132 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ed       	ldi	r30, 0xD4	; 212
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 32       	cpi	r26, 0x24	; 36
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e2       	ldi	r26, 0x24	; 36
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 32       	cpi	r26, 0x2F	; 47
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f5 d0       	rcall	.+490    	; 0x2ae <main>
  c4:	05 c1       	rjmp	.+522    	; 0x2d0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerSet>:
			//_delay_ms(1);
			transmit_data(~PORT[0]);
			//PORTC = ~PORT[i];
		}
	}
}
  c8:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <_avr_timer_M>
  cc:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <_avr_timer_M+0x1>
  d0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <_avr_timer_M+0x2>
  d4:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <_avr_timer_M+0x3>
  d8:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <_avr_timer_cntcurr>
  dc:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <_avr_timer_cntcurr+0x1>
  e0:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_avr_timer_cntcurr+0x2>
  e4:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <_avr_timer_cntcurr+0x3>
  e8:	08 95       	ret

000000ea <TimerOn>:
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f0:	8d e7       	ldi	r24, 0x7D	; 125
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 102:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 106:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 10a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <_avr_timer_M>
 10e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <_avr_timer_M+0x1>
 112:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <_avr_timer_M+0x2>
 116:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <_avr_timer_M+0x3>
 11a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_avr_timer_cntcurr>
 11e:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_avr_timer_cntcurr+0x1>
 122:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <_avr_timer_cntcurr+0x2>
 126:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <_avr_timer_cntcurr+0x3>
 12a:	8f b7       	in	r24, 0x3f	; 63
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8f bf       	out	0x3f, r24	; 63
 130:	08 95       	ret

00000132 <__vector_13>:
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_avr_timer_cntcurr>
 148:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_avr_timer_cntcurr+0x1>
 14c:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <_avr_timer_cntcurr+0x2>
 150:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <_avr_timer_cntcurr+0x3>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	a1 09       	sbc	r26, r1
 158:	b1 09       	sbc	r27, r1
 15a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_avr_timer_cntcurr>
 15e:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_avr_timer_cntcurr+0x1>
 162:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <_avr_timer_cntcurr+0x2>
 166:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <_avr_timer_cntcurr+0x3>
 16a:	89 2b       	or	r24, r25
 16c:	8a 2b       	or	r24, r26
 16e:	8b 2b       	or	r24, r27
 170:	99 f4       	brne	.+38     	; 0x198 <__vector_13+0x66>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <TimerFlag>
 178:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <_avr_timer_M>
 17c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <_avr_timer_M+0x1>
 180:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <_avr_timer_M+0x2>
 184:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <_avr_timer_M+0x3>
 188:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_avr_timer_cntcurr>
 18c:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_avr_timer_cntcurr+0x1>
 190:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <_avr_timer_cntcurr+0x2>
 194:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <_avr_timer_cntcurr+0x3>
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <transmit_data>:
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	58 e0       	ldi	r21, 0x08	; 8
 1b0:	e8 2f       	mov	r30, r24
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	58 b9       	out	0x08, r21	; 8
 1b6:	48 b1       	in	r20, 0x08	; 8
 1b8:	bf 01       	movw	r22, r30
 1ba:	02 2e       	mov	r0, r18
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <transmit_data+0x18>
 1be:	75 95       	asr	r23
 1c0:	67 95       	ror	r22
 1c2:	0a 94       	dec	r0
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <transmit_data+0x14>
 1c6:	96 2f       	mov	r25, r22
 1c8:	91 70       	andi	r25, 0x01	; 1
 1ca:	94 2b       	or	r25, r20
 1cc:	98 b9       	out	0x08, r25	; 8
 1ce:	41 9a       	sbi	0x08, 1	; 8
 1d0:	2f 5f       	subi	r18, 0xFF	; 255
 1d2:	3f 4f       	sbci	r19, 0xFF	; 255
 1d4:	28 30       	cpi	r18, 0x08	; 8
 1d6:	31 05       	cpc	r19, r1
 1d8:	69 f7       	brne	.-38     	; 0x1b4 <transmit_data+0xa>
 1da:	42 9a       	sbi	0x08, 2	; 8
 1dc:	18 b8       	out	0x08, r1	; 8
 1de:	08 95       	ret

000001e0 <transmit_data2>:
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	58 e0       	ldi	r21, 0x08	; 8
 1e6:	e8 2f       	mov	r30, r24
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	52 b9       	out	0x02, r21	; 2
 1ec:	42 b1       	in	r20, 0x02	; 2
 1ee:	bf 01       	movw	r22, r30
 1f0:	02 2e       	mov	r0, r18
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <transmit_data2+0x18>
 1f4:	75 95       	asr	r23
 1f6:	67 95       	ror	r22
 1f8:	0a 94       	dec	r0
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <transmit_data2+0x14>
 1fc:	96 2f       	mov	r25, r22
 1fe:	91 70       	andi	r25, 0x01	; 1
 200:	94 2b       	or	r25, r20
 202:	92 b9       	out	0x02, r25	; 2
 204:	11 9a       	sbi	0x02, 1	; 2
 206:	2f 5f       	subi	r18, 0xFF	; 255
 208:	3f 4f       	sbci	r19, 0xFF	; 255
 20a:	28 30       	cpi	r18, 0x08	; 8
 20c:	31 05       	cpc	r19, r1
 20e:	69 f7       	brne	.-38     	; 0x1ea <transmit_data2+0xa>
 210:	12 9a       	sbi	0x02, 2	; 2
 212:	12 b8       	out	0x02, r1	; 2
 214:	08 95       	ret

00000216 <LED>:
 216:	0f 93       	push	r16
 218:	1f 93       	push	r17
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	c0 91 28 01 	lds	r28, 0x0128	; 0x800128 <x>
 222:	d0 91 29 01 	lds	r29, 0x0129	; 0x800129 <x+0x1>
 226:	c0 31       	cpi	r28, 0x10	; 16
 228:	d1 05       	cpc	r29, r1
 22a:	c4 f5       	brge	.+112    	; 0x29c <LED+0x86>
 22c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <a>
 230:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <a+0x1>
 234:	82 33       	cpi	r24, 0x32	; 50
 236:	91 05       	cpc	r25, r1
 238:	3c f5       	brge	.+78     	; 0x288 <LED+0x72>
 23a:	00 91 24 01 	lds	r16, 0x0124	; 0x800124 <__data_end>
 23e:	10 91 25 01 	lds	r17, 0x0125	; 0x800125 <__data_end+0x1>
 242:	08 30       	cpi	r16, 0x08	; 8
 244:	11 05       	cpc	r17, r1
 246:	b4 f4       	brge	.+44     	; 0x274 <LED+0x5e>
 248:	f8 01       	movw	r30, r16
 24a:	e0 50       	subi	r30, 0x00	; 0
 24c:	ff 4f       	sbci	r31, 0xFF	; 255
 24e:	80 81       	ld	r24, Z
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	ab df       	rcall	.-170    	; 0x1aa <transmit_data>
 254:	c8 5f       	subi	r28, 0xF8	; 248
 256:	de 4f       	sbci	r29, 0xFE	; 254
 258:	c0 0f       	add	r28, r16
 25a:	d1 1f       	adc	r29, r17
 25c:	88 81       	ld	r24, Y
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	80 95       	com	r24
 262:	90 95       	com	r25
 264:	bd df       	rcall	.-134    	; 0x1e0 <transmit_data2>
 266:	0f 5f       	subi	r16, 0xFF	; 255
 268:	1f 4f       	sbci	r17, 0xFF	; 255
 26a:	10 93 25 01 	sts	0x0125, r17	; 0x800125 <__data_end+0x1>
 26e:	00 93 24 01 	sts	0x0124, r16	; 0x800124 <__data_end>
 272:	18 c0       	rjmp	.+48     	; 0x2a4 <LED+0x8e>
 274:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__data_end+0x1>
 278:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <a+0x1>
 282:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <a>
 286:	0e c0       	rjmp	.+28     	; 0x2a4 <LED+0x8e>
 288:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <a+0x1>
 28c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <a>
 290:	21 96       	adiw	r28, 0x01	; 1
 292:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <x+0x1>
 296:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <x>
 29a:	04 c0       	rjmp	.+8      	; 0x2a4 <LED+0x8e>
 29c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <x+0x1>
 2a0:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <x>
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
 2a8:	1f 91       	pop	r17
 2aa:	0f 91       	pop	r16
 2ac:	08 95       	ret

000002ae <main>:
int main(void)
{
	//DDRD = 0xFF; //PORTD as output
	//DDRD=0x00; PORTD = 0xFF;
	//DDRB=0xFF; PORTB = 0x00;
	DDRA = 0xFF; //PORTA as output
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	81 b9       	out	0x01, r24	; 1
	DDRC = 0xFF; //PORTC as output
 2b2:	87 b9       	out	0x07, r24	; 7
	TimerSet(1);
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	05 df       	rcall	.-502    	; 0xc8 <TimerSet>
	TimerOn();
 2be:	15 df       	rcall	.-470    	; 0xea <TimerOn>
 2c0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <TimerFlag>
	
	while(1)
	{
		// there are 142 values in the set of ALPHA to display 'CIRCUIT DIGEST', then shift them after each loop execution
		
		while(!TimerFlag) {}
 2c4:	88 23       	and	r24, r24
 2c6:	e1 f3       	breq	.-8      	; 0x2c0 <main+0x12>
		//LED_Matrix();
		LED();
 2c8:	a6 df       	rcall	.-180    	; 0x216 <LED>
 2ca:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <TimerFlag>
		//transmit_data2(0x02);
		
		TimerFlag=0;
 2ce:	f8 cf       	rjmp	.-16     	; 0x2c0 <main+0x12>

000002d0 <_exit>:
	}
 2d0:	f8 94       	cli

000002d2 <__stop_program>:
 2d2:	ff cf       	rjmp	.-2      	; 0x2d2 <__stop_program>
