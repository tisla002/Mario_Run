
main_logic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000089a  0000092e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000089a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  00800104  00800104  00000932  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000932  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000964  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dbb  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d4  00000000  00000000  00001837  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000891  00000000  00000000  0000210b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  0000299c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062a  00000000  00000000  00002d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000074f  00000000  00000000  0000332a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003a79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	bc c1       	rjmp	.+888    	; 0x3ae <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e9       	ldi	r30, 0x9A	; 154
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 32       	cpi	r26, 0x2F	; 47
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a6 d2       	rcall	.+1356   	; 0x610 <main>
  c4:	e8 c3       	rjmp	.+2000   	; 0x896 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <initUSART>:
}


unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	1f 92       	push	r1
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	89 83       	std	Y+1, r24	; 0x01
  d4:	89 81       	ldd	r24, Y+1	; 0x01
  d6:	81 30       	cpi	r24, 0x01	; 1
  d8:	e1 f0       	breq	.+56     	; 0x112 <initUSART+0x4a>
  da:	81 ec       	ldi	r24, 0xC1	; 193
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	21 ec       	ldi	r18, 0xC1	; 193
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	f9 01       	movw	r30, r18
  e4:	20 81       	ld	r18, Z
  e6:	28 61       	ori	r18, 0x18	; 24
  e8:	fc 01       	movw	r30, r24
  ea:	20 83       	st	Z, r18
  ec:	82 ec       	ldi	r24, 0xC2	; 194
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	22 ec       	ldi	r18, 0xC2	; 194
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	f9 01       	movw	r30, r18
  f6:	20 81       	ld	r18, Z
  f8:	26 60       	ori	r18, 0x06	; 6
  fa:	fc 01       	movw	r30, r24
  fc:	20 83       	st	Z, r18
  fe:	84 ec       	ldi	r24, 0xC4	; 196
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	23 e3       	ldi	r18, 0x33	; 51
 104:	fc 01       	movw	r30, r24
 106:	20 83       	st	Z, r18
 108:	85 ec       	ldi	r24, 0xC5	; 197
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	fc 01       	movw	r30, r24
 10e:	10 82       	st	Z, r1
 110:	1b c0       	rjmp	.+54     	; 0x148 <initUSART+0x80>
 112:	89 ec       	ldi	r24, 0xC9	; 201
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	29 ec       	ldi	r18, 0xC9	; 201
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	20 81       	ld	r18, Z
 11e:	28 61       	ori	r18, 0x18	; 24
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18
 124:	8a ec       	ldi	r24, 0xCA	; 202
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	2a ec       	ldi	r18, 0xCA	; 202
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	f9 01       	movw	r30, r18
 12e:	20 81       	ld	r18, Z
 130:	26 60       	ori	r18, 0x06	; 6
 132:	fc 01       	movw	r30, r24
 134:	20 83       	st	Z, r18
 136:	8c ec       	ldi	r24, 0xCC	; 204
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	23 e3       	ldi	r18, 0x33	; 51
 13c:	fc 01       	movw	r30, r24
 13e:	20 83       	st	Z, r18
 140:	8d ec       	ldi	r24, 0xCD	; 205
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	fc 01       	movw	r30, r24
 146:	10 82       	st	Z, r1
 148:	00 00       	nop
 14a:	0f 90       	pop	r0
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	08 95       	ret

00000152 <USART_HasReceived>:
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	1f 92       	push	r1
 158:	cd b7       	in	r28, 0x3d	; 61
 15a:	de b7       	in	r29, 0x3e	; 62
 15c:	89 83       	std	Y+1, r24	; 0x01
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	31 f0       	breq	.+12     	; 0x170 <USART_HasReceived+0x1e>
 164:	80 ec       	ldi	r24, 0xC0	; 192
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	fc 01       	movw	r30, r24
 16a:	80 81       	ld	r24, Z
 16c:	80 78       	andi	r24, 0x80	; 128
 16e:	05 c0       	rjmp	.+10     	; 0x17a <USART_HasReceived+0x28>
 170:	88 ec       	ldi	r24, 0xC8	; 200
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	fc 01       	movw	r30, r24
 176:	80 81       	ld	r24, Z
 178:	80 78       	andi	r24, 0x80	; 128
 17a:	0f 90       	pop	r0
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <USART_Receive>:
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	1f 92       	push	r1
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
 18c:	89 83       	std	Y+1, r24	; 0x01
 18e:	89 81       	ldd	r24, Y+1	; 0x01
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	61 f0       	breq	.+24     	; 0x1ac <USART_Receive+0x2a>
 194:	00 00       	nop
 196:	80 ec       	ldi	r24, 0xC0	; 192
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	fc 01       	movw	r30, r24
 19c:	80 81       	ld	r24, Z
 19e:	88 23       	and	r24, r24
 1a0:	d4 f7       	brge	.-12     	; 0x196 <USART_Receive+0x14>
 1a2:	86 ec       	ldi	r24, 0xC6	; 198
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	fc 01       	movw	r30, r24
 1a8:	80 81       	ld	r24, Z
 1aa:	0b c0       	rjmp	.+22     	; 0x1c2 <USART_Receive+0x40>
 1ac:	00 00       	nop
 1ae:	88 ec       	ldi	r24, 0xC8	; 200
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	fc 01       	movw	r30, r24
 1b4:	80 81       	ld	r24, Z
 1b6:	88 23       	and	r24, r24
 1b8:	d4 f7       	brge	.-12     	; 0x1ae <USART_Receive+0x2c>
 1ba:	8e ec       	ldi	r24, 0xCE	; 206
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	fc 01       	movw	r30, r24
 1c0:	80 81       	ld	r24, Z
 1c2:	0f 90       	pop	r0
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <TimerOn>:
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	cd b7       	in	r28, 0x3d	; 61
 1d0:	de b7       	in	r29, 0x3e	; 62
 1d2:	81 e8       	ldi	r24, 0x81	; 129
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	2b e0       	ldi	r18, 0x0B	; 11
 1d8:	fc 01       	movw	r30, r24
 1da:	20 83       	st	Z, r18
 1dc:	88 e8       	ldi	r24, 0x88	; 136
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	2f e0       	ldi	r18, 0x0F	; 15
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	fc 01       	movw	r30, r24
 1e6:	31 83       	std	Z+1, r19	; 0x01
 1e8:	20 83       	st	Z, r18
 1ea:	8f e6       	ldi	r24, 0x6F	; 111
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	22 e0       	ldi	r18, 0x02	; 2
 1f0:	fc 01       	movw	r30, r24
 1f2:	20 83       	st	Z, r18
 1f4:	84 e8       	ldi	r24, 0x84	; 132
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	fc 01       	movw	r30, r24
 1fa:	11 82       	std	Z+1, r1	; 0x01
 1fc:	10 82       	st	Z, r1
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 202:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 206:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 20a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 20e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 212:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 216:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 21a:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 21e:	8f e5       	ldi	r24, 0x5F	; 95
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	2f e5       	ldi	r18, 0x5F	; 95
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	f9 01       	movw	r30, r18
 228:	20 81       	ld	r18, Z
 22a:	20 68       	ori	r18, 0x80	; 128
 22c:	fc 01       	movw	r30, r24
 22e:	20 83       	st	Z, r18
 230:	00 00       	nop
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	08 95       	ret

00000238 <TimerISR>:
 238:	0f 93       	push	r16
 23a:	1f 93       	push	r17
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	1f 92       	push	r1
 242:	cd b7       	in	r28, 0x3d	; 61
 244:	de b7       	in	r29, 0x3e	; 62
 246:	19 82       	std	Y+1, r1	; 0x01
 248:	a6 c0       	rjmp	.+332    	; 0x396 <TimerISR+0x15e>
 24a:	89 81       	ldd	r24, Y+1	; 0x01
 24c:	28 2f       	mov	r18, r24
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	c9 01       	movw	r24, r18
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	82 0f       	add	r24, r18
 258:	93 1f       	adc	r25, r19
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	82 5f       	subi	r24, 0xF2	; 242
 264:	9e 4f       	sbci	r25, 0xFE	; 254
 266:	fc 01       	movw	r30, r24
 268:	20 81       	ld	r18, Z
 26a:	31 81       	ldd	r19, Z+1	; 0x01
 26c:	42 81       	ldd	r20, Z+2	; 0x02
 26e:	53 81       	ldd	r21, Z+3	; 0x03
 270:	89 81       	ldd	r24, Y+1	; 0x01
 272:	68 2f       	mov	r22, r24
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	cb 01       	movw	r24, r22
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	86 0f       	add	r24, r22
 27e:	97 1f       	adc	r25, r23
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	86 5f       	subi	r24, 0xF6	; 246
 28a:	9e 4f       	sbci	r25, 0xFE	; 254
 28c:	fc 01       	movw	r30, r24
 28e:	80 81       	ld	r24, Z
 290:	91 81       	ldd	r25, Z+1	; 0x01
 292:	a2 81       	ldd	r26, Z+2	; 0x02
 294:	b3 81       	ldd	r27, Z+3	; 0x03
 296:	28 17       	cp	r18, r24
 298:	39 07       	cpc	r19, r25
 29a:	4a 07       	cpc	r20, r26
 29c:	5b 07       	cpc	r21, r27
 29e:	08 f4       	brcc	.+2      	; 0x2a2 <TimerISR+0x6a>
 2a0:	49 c0       	rjmp	.+146    	; 0x334 <TimerISR+0xfc>
 2a2:	89 81       	ldd	r24, Y+1	; 0x01
 2a4:	08 2f       	mov	r16, r24
 2a6:	10 e0       	ldi	r17, 0x00	; 0
 2a8:	89 81       	ldd	r24, Y+1	; 0x01
 2aa:	28 2f       	mov	r18, r24
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	c9 01       	movw	r24, r18
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	82 0f       	add	r24, r18
 2b6:	93 1f       	adc	r25, r19
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	8e 5e       	subi	r24, 0xEE	; 238
 2c2:	9e 4f       	sbci	r25, 0xFE	; 254
 2c4:	fc 01       	movw	r30, r24
 2c6:	40 81       	ld	r20, Z
 2c8:	51 81       	ldd	r21, Z+1	; 0x01
 2ca:	89 81       	ldd	r24, Y+1	; 0x01
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	c9 01       	movw	r24, r18
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	82 0f       	add	r24, r18
 2d8:	93 1f       	adc	r25, r19
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	88 0f       	add	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	88 5f       	subi	r24, 0xF8	; 248
 2e4:	9e 4f       	sbci	r25, 0xFE	; 254
 2e6:	fc 01       	movw	r30, r24
 2e8:	80 81       	ld	r24, Z
 2ea:	91 81       	ldd	r25, Z+1	; 0x01
 2ec:	fa 01       	movw	r30, r20
 2ee:	09 95       	icall
 2f0:	9c 01       	movw	r18, r24
 2f2:	c8 01       	movw	r24, r16
 2f4:	88 0f       	add	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	80 0f       	add	r24, r16
 2fa:	91 1f       	adc	r25, r17
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	88 5f       	subi	r24, 0xF8	; 248
 306:	9e 4f       	sbci	r25, 0xFE	; 254
 308:	fc 01       	movw	r30, r24
 30a:	31 83       	std	Z+1, r19	; 0x01
 30c:	20 83       	st	Z, r18
 30e:	89 81       	ldd	r24, Y+1	; 0x01
 310:	28 2f       	mov	r18, r24
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	c9 01       	movw	r24, r18
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	82 0f       	add	r24, r18
 31c:	93 1f       	adc	r25, r19
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	82 5f       	subi	r24, 0xF2	; 242
 328:	9e 4f       	sbci	r25, 0xFE	; 254
 32a:	fc 01       	movw	r30, r24
 32c:	10 82       	st	Z, r1
 32e:	11 82       	std	Z+1, r1	; 0x01
 330:	12 82       	std	Z+2, r1	; 0x02
 332:	13 82       	std	Z+3, r1	; 0x03
 334:	89 81       	ldd	r24, Y+1	; 0x01
 336:	68 2f       	mov	r22, r24
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	89 81       	ldd	r24, Y+1	; 0x01
 33c:	28 2f       	mov	r18, r24
 33e:	30 e0       	ldi	r19, 0x00	; 0
 340:	c9 01       	movw	r24, r18
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	82 0f       	add	r24, r18
 348:	93 1f       	adc	r25, r19
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	82 5f       	subi	r24, 0xF2	; 242
 354:	9e 4f       	sbci	r25, 0xFE	; 254
 356:	fc 01       	movw	r30, r24
 358:	80 81       	ld	r24, Z
 35a:	91 81       	ldd	r25, Z+1	; 0x01
 35c:	a2 81       	ldd	r26, Z+2	; 0x02
 35e:	b3 81       	ldd	r27, Z+3	; 0x03
 360:	22 e3       	ldi	r18, 0x32	; 50
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	40 e0       	ldi	r20, 0x00	; 0
 366:	50 e0       	ldi	r21, 0x00	; 0
 368:	28 0f       	add	r18, r24
 36a:	39 1f       	adc	r19, r25
 36c:	4a 1f       	adc	r20, r26
 36e:	5b 1f       	adc	r21, r27
 370:	cb 01       	movw	r24, r22
 372:	88 0f       	add	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	86 0f       	add	r24, r22
 378:	97 1f       	adc	r25, r23
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	82 5f       	subi	r24, 0xF2	; 242
 384:	9e 4f       	sbci	r25, 0xFE	; 254
 386:	fc 01       	movw	r30, r24
 388:	20 83       	st	Z, r18
 38a:	31 83       	std	Z+1, r19	; 0x01
 38c:	42 83       	std	Z+2, r20	; 0x02
 38e:	53 83       	std	Z+3, r21	; 0x03
 390:	89 81       	ldd	r24, Y+1	; 0x01
 392:	8f 5f       	subi	r24, 0xFF	; 255
 394:	89 83       	std	Y+1, r24	; 0x01
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	99 81       	ldd	r25, Y+1	; 0x01
 39a:	98 17       	cp	r25, r24
 39c:	08 f4       	brcc	.+2      	; 0x3a0 <TimerISR+0x168>
 39e:	55 cf       	rjmp	.-342    	; 0x24a <TimerISR+0x12>
 3a0:	00 00       	nop
 3a2:	0f 90       	pop	r0
 3a4:	df 91       	pop	r29
 3a6:	cf 91       	pop	r28
 3a8:	1f 91       	pop	r17
 3aa:	0f 91       	pop	r16
 3ac:	08 95       	ret

000003ae <__vector_13>:
 3ae:	1f 92       	push	r1
 3b0:	0f 92       	push	r0
 3b2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 3b6:	0f 92       	push	r0
 3b8:	11 24       	eor	r1, r1
 3ba:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 3be:	0f 92       	push	r0
 3c0:	2f 93       	push	r18
 3c2:	3f 93       	push	r19
 3c4:	4f 93       	push	r20
 3c6:	5f 93       	push	r21
 3c8:	6f 93       	push	r22
 3ca:	7f 93       	push	r23
 3cc:	8f 93       	push	r24
 3ce:	9f 93       	push	r25
 3d0:	af 93       	push	r26
 3d2:	bf 93       	push	r27
 3d4:	ef 93       	push	r30
 3d6:	ff 93       	push	r31
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 3e4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 3e8:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 3ec:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	a1 09       	sbc	r26, r1
 3f4:	b1 09       	sbc	r27, r1
 3f6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 3fa:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 3fe:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 402:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 406:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 40a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 40e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 412:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 416:	89 2b       	or	r24, r25
 418:	8a 2b       	or	r24, r26
 41a:	8b 2b       	or	r24, r27
 41c:	89 f4       	brne	.+34     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 41e:	0c df       	rcall	.-488    	; 0x238 <TimerISR>
 420:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 424:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 428:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 42c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 430:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 434:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 438:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 43c:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 440:	00 00       	nop
 442:	df 91       	pop	r29
 444:	cf 91       	pop	r28
 446:	ff 91       	pop	r31
 448:	ef 91       	pop	r30
 44a:	bf 91       	pop	r27
 44c:	af 91       	pop	r26
 44e:	9f 91       	pop	r25
 450:	8f 91       	pop	r24
 452:	7f 91       	pop	r23
 454:	6f 91       	pop	r22
 456:	5f 91       	pop	r21
 458:	4f 91       	pop	r20
 45a:	3f 91       	pop	r19
 45c:	2f 91       	pop	r18
 45e:	0f 90       	pop	r0
 460:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 464:	0f 90       	pop	r0
 466:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 46a:	0f 90       	pop	r0
 46c:	1f 90       	pop	r1
 46e:	18 95       	reti

00000470 <TimerSet>:
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	00 d0       	rcall	.+0      	; 0x476 <TimerSet+0x6>
 476:	00 d0       	rcall	.+0      	; 0x478 <TimerSet+0x8>
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	69 83       	std	Y+1, r22	; 0x01
 47e:	7a 83       	std	Y+2, r23	; 0x02
 480:	8b 83       	std	Y+3, r24	; 0x03
 482:	9c 83       	std	Y+4, r25	; 0x04
 484:	89 81       	ldd	r24, Y+1	; 0x01
 486:	9a 81       	ldd	r25, Y+2	; 0x02
 488:	ab 81       	ldd	r26, Y+3	; 0x03
 48a:	bc 81       	ldd	r27, Y+4	; 0x04
 48c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 490:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 494:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 498:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 49c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4a0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 4a4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 4a8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 4ac:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 4b0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 4b4:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 4b8:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 4bc:	00 00       	nop
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <Tick_bluetooth>:

//=================bluetooth_SM=================//
enum bluetooth_state{Bstart, receive};
int Tick_bluetooth (int state){
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	00 d0       	rcall	.+0      	; 0x4d2 <Tick_bluetooth+0x6>
 4d2:	cd b7       	in	r28, 0x3d	; 61
 4d4:	de b7       	in	r29, 0x3e	; 62
 4d6:	9a 83       	std	Y+2, r25	; 0x02
 4d8:	89 83       	std	Y+1, r24	; 0x01
	switch(state){	//transitions
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	9a 81       	ldd	r25, Y+2	; 0x02
 4de:	00 97       	sbiw	r24, 0x00	; 0
 4e0:	19 f0       	breq	.+6      	; 0x4e8 <Tick_bluetooth+0x1c>
 4e2:	01 97       	sbiw	r24, 0x01	; 1
 4e4:	69 f0       	breq	.+26     	; 0x500 <Tick_bluetooth+0x34>
 4e6:	0f c0       	rjmp	.+30     	; 0x506 <Tick_bluetooth+0x3a>
		
		case Bstart:
		if(!USART_HasReceived(0)){
 4e8:	80 e0       	ldi	r24, 0x00	; 0
 4ea:	33 de       	rcall	.-922    	; 0x152 <USART_HasReceived>
 4ec:	88 23       	and	r24, r24
 4ee:	19 f4       	brne	.+6      	; 0x4f6 <Tick_bluetooth+0x2a>
			state = Bstart;
 4f0:	1a 82       	std	Y+2, r1	; 0x02
 4f2:	19 82       	std	Y+1, r1	; 0x01
		}else{
			state = receive;
		}
		//state = Bstart;
		
		break;
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <Tick_bluetooth+0x3a>
		
		case Bstart:
		if(!USART_HasReceived(0)){
			state = Bstart;
		}else{
			state = receive;
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	9a 83       	std	Y+2, r25	; 0x02
 4fc:	89 83       	std	Y+1, r24	; 0x01
		}
		//state = Bstart;
		
		break;
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <Tick_bluetooth+0x3a>
		
		case receive:		
		state = Bstart;
 500:	1a 82       	std	Y+2, r1	; 0x02
 502:	19 82       	std	Y+1, r1	; 0x01
		break;
 504:	00 00       	nop
			
	}
	
	switch(state){		//actions
 506:	89 81       	ldd	r24, Y+1	; 0x01
 508:	9a 81       	ldd	r25, Y+2	; 0x02
 50a:	00 97       	sbiw	r24, 0x00	; 0
 50c:	89 f1       	breq	.+98     	; 0x570 <Tick_bluetooth+0xa4>
 50e:	01 97       	sbiw	r24, 0x01	; 1
 510:	81 f5       	brne	.+96     	; 0x572 <Tick_bluetooth+0xa6>
		case Bstart:
		break;
		
		case receive:
		Data_in = USART_Receive(0);						/* receive data from Blue-tooth device*/
 512:	80 e0       	ldi	r24, 0x00	; 0
 514:	36 de       	rcall	.-916    	; 0x182 <USART_Receive>
 516:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <Data_in>
		if(Data_in =='1'){
 51a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Data_in>
 51e:	81 33       	cpi	r24, 0x31	; 49
 520:	21 f4       	brne	.+8      	; 0x52a <Tick_bluetooth+0x5e>
			bluetoothOutput = 0x01;									/* Turn ON LED */
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <bluetoothOutput>
			}else if(Data_in =='5'){
			bluetoothOutput = 0x10;									/* Turn OFF LED */
			}else{
			bluetoothOutput = 0x00;
		}
		break;
 528:	24 c0       	rjmp	.+72     	; 0x572 <Tick_bluetooth+0xa6>
		
		case receive:
		Data_in = USART_Receive(0);						/* receive data from Blue-tooth device*/
		if(Data_in =='1'){
			bluetoothOutput = 0x01;									/* Turn ON LED */
			}else if(Data_in =='2'){
 52a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Data_in>
 52e:	82 33       	cpi	r24, 0x32	; 50
 530:	21 f4       	brne	.+8      	; 0x53a <Tick_bluetooth+0x6e>
			bluetoothOutput = 0x02;									/* Turn OFF LED */
 532:	82 e0       	ldi	r24, 0x02	; 2
 534:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <bluetoothOutput>
			}else if(Data_in =='5'){
			bluetoothOutput = 0x10;									/* Turn OFF LED */
			}else{
			bluetoothOutput = 0x00;
		}
		break;
 538:	1c c0       	rjmp	.+56     	; 0x572 <Tick_bluetooth+0xa6>
		Data_in = USART_Receive(0);						/* receive data from Blue-tooth device*/
		if(Data_in =='1'){
			bluetoothOutput = 0x01;									/* Turn ON LED */
			}else if(Data_in =='2'){
			bluetoothOutput = 0x02;									/* Turn OFF LED */
			}else if(Data_in =='3'){
 53a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Data_in>
 53e:	83 33       	cpi	r24, 0x33	; 51
 540:	21 f4       	brne	.+8      	; 0x54a <Tick_bluetooth+0x7e>
			bluetoothOutput = 0x04;									/* Turn OFF LED */
 542:	84 e0       	ldi	r24, 0x04	; 4
 544:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <bluetoothOutput>
			}else if(Data_in =='5'){
			bluetoothOutput = 0x10;									/* Turn OFF LED */
			}else{
			bluetoothOutput = 0x00;
		}
		break;
 548:	14 c0       	rjmp	.+40     	; 0x572 <Tick_bluetooth+0xa6>
			bluetoothOutput = 0x01;									/* Turn ON LED */
			}else if(Data_in =='2'){
			bluetoothOutput = 0x02;									/* Turn OFF LED */
			}else if(Data_in =='3'){
			bluetoothOutput = 0x04;									/* Turn OFF LED */
			}else if(Data_in =='4'){
 54a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Data_in>
 54e:	84 33       	cpi	r24, 0x34	; 52
 550:	21 f4       	brne	.+8      	; 0x55a <Tick_bluetooth+0x8e>
			bluetoothOutput = 0x08;									/* Turn OFF LED */
 552:	88 e0       	ldi	r24, 0x08	; 8
 554:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <bluetoothOutput>
			}else if(Data_in =='5'){
			bluetoothOutput = 0x10;									/* Turn OFF LED */
			}else{
			bluetoothOutput = 0x00;
		}
		break;
 558:	0c c0       	rjmp	.+24     	; 0x572 <Tick_bluetooth+0xa6>
			bluetoothOutput = 0x02;									/* Turn OFF LED */
			}else if(Data_in =='3'){
			bluetoothOutput = 0x04;									/* Turn OFF LED */
			}else if(Data_in =='4'){
			bluetoothOutput = 0x08;									/* Turn OFF LED */
			}else if(Data_in =='5'){
 55a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Data_in>
 55e:	85 33       	cpi	r24, 0x35	; 53
 560:	21 f4       	brne	.+8      	; 0x56a <Tick_bluetooth+0x9e>
			bluetoothOutput = 0x10;									/* Turn OFF LED */
 562:	80 e1       	ldi	r24, 0x10	; 16
 564:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <bluetoothOutput>
			}else{
			bluetoothOutput = 0x00;
		}
		break;
 568:	04 c0       	rjmp	.+8      	; 0x572 <Tick_bluetooth+0xa6>
			}else if(Data_in =='4'){
			bluetoothOutput = 0x08;									/* Turn OFF LED */
			}else if(Data_in =='5'){
			bluetoothOutput = 0x10;									/* Turn OFF LED */
			}else{
			bluetoothOutput = 0x00;
 56a:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <bluetoothOutput>
		}
		break;
 56e:	01 c0       	rjmp	.+2      	; 0x572 <Tick_bluetooth+0xa6>
			
	}
	
	switch(state){		//actions
		case Bstart:
		break;
 570:	00 00       	nop
			}else{
			bluetoothOutput = 0x00;
		}
		break;
	}
	return state;
 572:	89 81       	ldd	r24, Y+1	; 0x01
 574:	9a 81       	ldd	r25, Y+2	; 0x02
}
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	df 91       	pop	r29
 57c:	cf 91       	pop	r28
 57e:	08 95       	ret

00000580 <Tick_stuff>:

//=================random_SM=================//
enum stuff{start, start1};
int Tick_stuff (int state){
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	00 d0       	rcall	.+0      	; 0x586 <Tick_stuff+0x6>
 586:	cd b7       	in	r28, 0x3d	; 61
 588:	de b7       	in	r29, 0x3e	; 62
 58a:	9a 83       	std	Y+2, r25	; 0x02
 58c:	89 83       	std	Y+1, r24	; 0x01
	switch(state){
 58e:	89 81       	ldd	r24, Y+1	; 0x01
 590:	9a 81       	ldd	r25, Y+2	; 0x02
 592:	00 97       	sbiw	r24, 0x00	; 0
 594:	19 f0       	breq	.+6      	; 0x59c <Tick_stuff+0x1c>
 596:	01 97       	sbiw	r24, 0x01	; 1
 598:	49 f0       	breq	.+18     	; 0x5ac <Tick_stuff+0x2c>
 59a:	0e c0       	rjmp	.+28     	; 0x5b8 <Tick_stuff+0x38>
		case start:
		stuffOutput = 0x04;
 59c:	84 e0       	ldi	r24, 0x04	; 4
 59e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <stuffOutput>
		state = start1;
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	9a 83       	std	Y+2, r25	; 0x02
 5a8:	89 83       	std	Y+1, r24	; 0x01
		break;
 5aa:	06 c0       	rjmp	.+12     	; 0x5b8 <Tick_stuff+0x38>
		
		case start1:
		stuffOutput = 0x08;
 5ac:	88 e0       	ldi	r24, 0x08	; 8
 5ae:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <stuffOutput>
		state = start;
 5b2:	1a 82       	std	Y+2, r1	; 0x02
 5b4:	19 82       	std	Y+1, r1	; 0x01
		break;	
 5b6:	00 00       	nop
	}
	return state;
 5b8:	89 81       	ldd	r24, Y+1	; 0x01
 5ba:	9a 81       	ldd	r25, Y+2	; 0x02
}
 5bc:	0f 90       	pop	r0
 5be:	0f 90       	pop	r0
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	08 95       	ret

000005c6 <Tick_output>:

enum output{O_start};
int Tick_output(int state){
 5c6:	cf 93       	push	r28
 5c8:	df 93       	push	r29
 5ca:	00 d0       	rcall	.+0      	; 0x5cc <Tick_output+0x6>
 5cc:	cd b7       	in	r28, 0x3d	; 61
 5ce:	de b7       	in	r29, 0x3e	; 62
 5d0:	9a 83       	std	Y+2, r25	; 0x02
 5d2:	89 83       	std	Y+1, r24	; 0x01
	switch(state){
 5d4:	89 81       	ldd	r24, Y+1	; 0x01
 5d6:	9a 81       	ldd	r25, Y+2	; 0x02
 5d8:	89 2b       	or	r24, r25
 5da:	99 f4       	brne	.+38     	; 0x602 <Tick_output+0x3c>
		case O_start:
		PORTC = (stuffOutput << 4) | bluetoothOutput;
 5dc:	88 e2       	ldi	r24, 0x28	; 40
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <stuffOutput>
 5e4:	22 2f       	mov	r18, r18
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	22 95       	swap	r18
 5ea:	32 95       	swap	r19
 5ec:	30 7f       	andi	r19, 0xF0	; 240
 5ee:	32 27       	eor	r19, r18
 5f0:	20 7f       	andi	r18, 0xF0	; 240
 5f2:	32 27       	eor	r19, r18
 5f4:	32 2f       	mov	r19, r18
 5f6:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <bluetoothOutput>
 5fa:	23 2b       	or	r18, r19
 5fc:	fc 01       	movw	r30, r24
 5fe:	20 83       	st	Z, r18
		break;	
 600:	00 00       	nop
	}
	return state;
 602:	89 81       	ldd	r24, Y+1	; 0x01
 604:	9a 81       	ldd	r25, Y+2	; 0x02
}
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
 60a:	df 91       	pop	r29
 60c:	cf 91       	pop	r28
 60e:	08 95       	ret

00000610 <main>:

int main(void)
{
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	1f 92       	push	r1
 616:	cd b7       	in	r28, 0x3d	; 61
 618:	de b7       	in	r29, 0x3e	; 62
	//=========Initializing task on structure===========//
	unsigned char i=0;
 61a:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].state = Bstart;
 61c:	89 81       	ldd	r24, Y+1	; 0x01
 61e:	28 2f       	mov	r18, r24
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	c9 01       	movw	r24, r18
 624:	88 0f       	add	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	82 0f       	add	r24, r18
 62a:	93 1f       	adc	r25, r19
 62c:	88 0f       	add	r24, r24
 62e:	99 1f       	adc	r25, r25
 630:	88 0f       	add	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	88 5f       	subi	r24, 0xF8	; 248
 636:	9e 4f       	sbci	r25, 0xFE	; 254
 638:	fc 01       	movw	r30, r24
 63a:	11 82       	std	Z+1, r1	; 0x01
 63c:	10 82       	st	Z, r1
	tasks[i].period = Keypadperiod;
 63e:	89 81       	ldd	r24, Y+1	; 0x01
 640:	68 2f       	mov	r22, r24
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	20 e9       	ldi	r18, 0x90	; 144
 646:	31 e0       	ldi	r19, 0x01	; 1
 648:	40 e0       	ldi	r20, 0x00	; 0
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	cb 01       	movw	r24, r22
 64e:	88 0f       	add	r24, r24
 650:	99 1f       	adc	r25, r25
 652:	86 0f       	add	r24, r22
 654:	97 1f       	adc	r25, r23
 656:	88 0f       	add	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	88 0f       	add	r24, r24
 65c:	99 1f       	adc	r25, r25
 65e:	86 5f       	subi	r24, 0xF6	; 246
 660:	9e 4f       	sbci	r25, 0xFE	; 254
 662:	fc 01       	movw	r30, r24
 664:	20 83       	st	Z, r18
 666:	31 83       	std	Z+1, r19	; 0x01
 668:	42 83       	std	Z+2, r20	; 0x02
 66a:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].elapsedTime = tasks[i].period;
 66c:	89 81       	ldd	r24, Y+1	; 0x01
 66e:	68 2f       	mov	r22, r24
 670:	70 e0       	ldi	r23, 0x00	; 0
 672:	89 81       	ldd	r24, Y+1	; 0x01
 674:	28 2f       	mov	r18, r24
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	c9 01       	movw	r24, r18
 67a:	88 0f       	add	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	82 0f       	add	r24, r18
 680:	93 1f       	adc	r25, r19
 682:	88 0f       	add	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	88 0f       	add	r24, r24
 688:	99 1f       	adc	r25, r25
 68a:	86 5f       	subi	r24, 0xF6	; 246
 68c:	9e 4f       	sbci	r25, 0xFE	; 254
 68e:	fc 01       	movw	r30, r24
 690:	20 81       	ld	r18, Z
 692:	31 81       	ldd	r19, Z+1	; 0x01
 694:	42 81       	ldd	r20, Z+2	; 0x02
 696:	53 81       	ldd	r21, Z+3	; 0x03
 698:	cb 01       	movw	r24, r22
 69a:	88 0f       	add	r24, r24
 69c:	99 1f       	adc	r25, r25
 69e:	86 0f       	add	r24, r22
 6a0:	97 1f       	adc	r25, r23
 6a2:	88 0f       	add	r24, r24
 6a4:	99 1f       	adc	r25, r25
 6a6:	88 0f       	add	r24, r24
 6a8:	99 1f       	adc	r25, r25
 6aa:	82 5f       	subi	r24, 0xF2	; 242
 6ac:	9e 4f       	sbci	r25, 0xFE	; 254
 6ae:	fc 01       	movw	r30, r24
 6b0:	20 83       	st	Z, r18
 6b2:	31 83       	std	Z+1, r19	; 0x01
 6b4:	42 83       	std	Z+2, r20	; 0x02
 6b6:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].TickFct = &Tick_bluetooth;
 6b8:	89 81       	ldd	r24, Y+1	; 0x01
 6ba:	28 2f       	mov	r18, r24
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	c9 01       	movw	r24, r18
 6c0:	88 0f       	add	r24, r24
 6c2:	99 1f       	adc	r25, r25
 6c4:	82 0f       	add	r24, r18
 6c6:	93 1f       	adc	r25, r19
 6c8:	88 0f       	add	r24, r24
 6ca:	99 1f       	adc	r25, r25
 6cc:	88 0f       	add	r24, r24
 6ce:	99 1f       	adc	r25, r25
 6d0:	8e 5e       	subi	r24, 0xEE	; 238
 6d2:	9e 4f       	sbci	r25, 0xFE	; 254
 6d4:	26 e6       	ldi	r18, 0x66	; 102
 6d6:	32 e0       	ldi	r19, 0x02	; 2
 6d8:	fc 01       	movw	r30, r24
 6da:	31 83       	std	Z+1, r19	; 0x01
 6dc:	20 83       	st	Z, r18
	i++;
 6de:	89 81       	ldd	r24, Y+1	; 0x01
 6e0:	8f 5f       	subi	r24, 0xFF	; 255
 6e2:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].state = start;
 6e4:	89 81       	ldd	r24, Y+1	; 0x01
 6e6:	28 2f       	mov	r18, r24
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	c9 01       	movw	r24, r18
 6ec:	88 0f       	add	r24, r24
 6ee:	99 1f       	adc	r25, r25
 6f0:	82 0f       	add	r24, r18
 6f2:	93 1f       	adc	r25, r19
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	88 0f       	add	r24, r24
 6fa:	99 1f       	adc	r25, r25
 6fc:	88 5f       	subi	r24, 0xF8	; 248
 6fe:	9e 4f       	sbci	r25, 0xFE	; 254
 700:	fc 01       	movw	r30, r24
 702:	11 82       	std	Z+1, r1	; 0x01
 704:	10 82       	st	Z, r1
	tasks[i].period = stuffperiod;
 706:	89 81       	ldd	r24, Y+1	; 0x01
 708:	68 2f       	mov	r22, r24
 70a:	70 e0       	ldi	r23, 0x00	; 0
 70c:	28 ee       	ldi	r18, 0xE8	; 232
 70e:	33 e0       	ldi	r19, 0x03	; 3
 710:	40 e0       	ldi	r20, 0x00	; 0
 712:	50 e0       	ldi	r21, 0x00	; 0
 714:	cb 01       	movw	r24, r22
 716:	88 0f       	add	r24, r24
 718:	99 1f       	adc	r25, r25
 71a:	86 0f       	add	r24, r22
 71c:	97 1f       	adc	r25, r23
 71e:	88 0f       	add	r24, r24
 720:	99 1f       	adc	r25, r25
 722:	88 0f       	add	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	86 5f       	subi	r24, 0xF6	; 246
 728:	9e 4f       	sbci	r25, 0xFE	; 254
 72a:	fc 01       	movw	r30, r24
 72c:	20 83       	st	Z, r18
 72e:	31 83       	std	Z+1, r19	; 0x01
 730:	42 83       	std	Z+2, r20	; 0x02
 732:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].elapsedTime = tasks[i].period;
 734:	89 81       	ldd	r24, Y+1	; 0x01
 736:	68 2f       	mov	r22, r24
 738:	70 e0       	ldi	r23, 0x00	; 0
 73a:	89 81       	ldd	r24, Y+1	; 0x01
 73c:	28 2f       	mov	r18, r24
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	c9 01       	movw	r24, r18
 742:	88 0f       	add	r24, r24
 744:	99 1f       	adc	r25, r25
 746:	82 0f       	add	r24, r18
 748:	93 1f       	adc	r25, r19
 74a:	88 0f       	add	r24, r24
 74c:	99 1f       	adc	r25, r25
 74e:	88 0f       	add	r24, r24
 750:	99 1f       	adc	r25, r25
 752:	86 5f       	subi	r24, 0xF6	; 246
 754:	9e 4f       	sbci	r25, 0xFE	; 254
 756:	fc 01       	movw	r30, r24
 758:	20 81       	ld	r18, Z
 75a:	31 81       	ldd	r19, Z+1	; 0x01
 75c:	42 81       	ldd	r20, Z+2	; 0x02
 75e:	53 81       	ldd	r21, Z+3	; 0x03
 760:	cb 01       	movw	r24, r22
 762:	88 0f       	add	r24, r24
 764:	99 1f       	adc	r25, r25
 766:	86 0f       	add	r24, r22
 768:	97 1f       	adc	r25, r23
 76a:	88 0f       	add	r24, r24
 76c:	99 1f       	adc	r25, r25
 76e:	88 0f       	add	r24, r24
 770:	99 1f       	adc	r25, r25
 772:	82 5f       	subi	r24, 0xF2	; 242
 774:	9e 4f       	sbci	r25, 0xFE	; 254
 776:	fc 01       	movw	r30, r24
 778:	20 83       	st	Z, r18
 77a:	31 83       	std	Z+1, r19	; 0x01
 77c:	42 83       	std	Z+2, r20	; 0x02
 77e:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].TickFct = &Tick_stuff;
 780:	89 81       	ldd	r24, Y+1	; 0x01
 782:	28 2f       	mov	r18, r24
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	c9 01       	movw	r24, r18
 788:	88 0f       	add	r24, r24
 78a:	99 1f       	adc	r25, r25
 78c:	82 0f       	add	r24, r18
 78e:	93 1f       	adc	r25, r19
 790:	88 0f       	add	r24, r24
 792:	99 1f       	adc	r25, r25
 794:	88 0f       	add	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	8e 5e       	subi	r24, 0xEE	; 238
 79a:	9e 4f       	sbci	r25, 0xFE	; 254
 79c:	20 ec       	ldi	r18, 0xC0	; 192
 79e:	32 e0       	ldi	r19, 0x02	; 2
 7a0:	fc 01       	movw	r30, r24
 7a2:	31 83       	std	Z+1, r19	; 0x01
 7a4:	20 83       	st	Z, r18
	i++;
 7a6:	89 81       	ldd	r24, Y+1	; 0x01
 7a8:	8f 5f       	subi	r24, 0xFF	; 255
 7aa:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].state = O_start;
 7ac:	89 81       	ldd	r24, Y+1	; 0x01
 7ae:	28 2f       	mov	r18, r24
 7b0:	30 e0       	ldi	r19, 0x00	; 0
 7b2:	c9 01       	movw	r24, r18
 7b4:	88 0f       	add	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	82 0f       	add	r24, r18
 7ba:	93 1f       	adc	r25, r19
 7bc:	88 0f       	add	r24, r24
 7be:	99 1f       	adc	r25, r25
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	88 5f       	subi	r24, 0xF8	; 248
 7c6:	9e 4f       	sbci	r25, 0xFE	; 254
 7c8:	fc 01       	movw	r30, r24
 7ca:	11 82       	std	Z+1, r1	; 0x01
 7cc:	10 82       	st	Z, r1
	tasks[i].period = outputperiod;
 7ce:	89 81       	ldd	r24, Y+1	; 0x01
 7d0:	68 2f       	mov	r22, r24
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	28 ec       	ldi	r18, 0xC8	; 200
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	40 e0       	ldi	r20, 0x00	; 0
 7da:	50 e0       	ldi	r21, 0x00	; 0
 7dc:	cb 01       	movw	r24, r22
 7de:	88 0f       	add	r24, r24
 7e0:	99 1f       	adc	r25, r25
 7e2:	86 0f       	add	r24, r22
 7e4:	97 1f       	adc	r25, r23
 7e6:	88 0f       	add	r24, r24
 7e8:	99 1f       	adc	r25, r25
 7ea:	88 0f       	add	r24, r24
 7ec:	99 1f       	adc	r25, r25
 7ee:	86 5f       	subi	r24, 0xF6	; 246
 7f0:	9e 4f       	sbci	r25, 0xFE	; 254
 7f2:	fc 01       	movw	r30, r24
 7f4:	20 83       	st	Z, r18
 7f6:	31 83       	std	Z+1, r19	; 0x01
 7f8:	42 83       	std	Z+2, r20	; 0x02
 7fa:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].elapsedTime = tasks[i].period;
 7fc:	89 81       	ldd	r24, Y+1	; 0x01
 7fe:	68 2f       	mov	r22, r24
 800:	70 e0       	ldi	r23, 0x00	; 0
 802:	89 81       	ldd	r24, Y+1	; 0x01
 804:	28 2f       	mov	r18, r24
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	c9 01       	movw	r24, r18
 80a:	88 0f       	add	r24, r24
 80c:	99 1f       	adc	r25, r25
 80e:	82 0f       	add	r24, r18
 810:	93 1f       	adc	r25, r19
 812:	88 0f       	add	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	88 0f       	add	r24, r24
 818:	99 1f       	adc	r25, r25
 81a:	86 5f       	subi	r24, 0xF6	; 246
 81c:	9e 4f       	sbci	r25, 0xFE	; 254
 81e:	fc 01       	movw	r30, r24
 820:	20 81       	ld	r18, Z
 822:	31 81       	ldd	r19, Z+1	; 0x01
 824:	42 81       	ldd	r20, Z+2	; 0x02
 826:	53 81       	ldd	r21, Z+3	; 0x03
 828:	cb 01       	movw	r24, r22
 82a:	88 0f       	add	r24, r24
 82c:	99 1f       	adc	r25, r25
 82e:	86 0f       	add	r24, r22
 830:	97 1f       	adc	r25, r23
 832:	88 0f       	add	r24, r24
 834:	99 1f       	adc	r25, r25
 836:	88 0f       	add	r24, r24
 838:	99 1f       	adc	r25, r25
 83a:	82 5f       	subi	r24, 0xF2	; 242
 83c:	9e 4f       	sbci	r25, 0xFE	; 254
 83e:	fc 01       	movw	r30, r24
 840:	20 83       	st	Z, r18
 842:	31 83       	std	Z+1, r19	; 0x01
 844:	42 83       	std	Z+2, r20	; 0x02
 846:	53 83       	std	Z+3, r21	; 0x03
	tasks[i].TickFct = &Tick_output;
 848:	89 81       	ldd	r24, Y+1	; 0x01
 84a:	28 2f       	mov	r18, r24
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	c9 01       	movw	r24, r18
 850:	88 0f       	add	r24, r24
 852:	99 1f       	adc	r25, r25
 854:	82 0f       	add	r24, r18
 856:	93 1f       	adc	r25, r19
 858:	88 0f       	add	r24, r24
 85a:	99 1f       	adc	r25, r25
 85c:	88 0f       	add	r24, r24
 85e:	99 1f       	adc	r25, r25
 860:	8e 5e       	subi	r24, 0xEE	; 238
 862:	9e 4f       	sbci	r25, 0xFE	; 254
 864:	23 ee       	ldi	r18, 0xE3	; 227
 866:	32 e0       	ldi	r19, 0x02	; 2
 868:	fc 01       	movw	r30, r24
 86a:	31 83       	std	Z+1, r19	; 0x01
 86c:	20 83       	st	Z, r18
	
	//=========Setting Ports===========//
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
 86e:	87 e2       	ldi	r24, 0x27	; 39
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	2f ef       	ldi	r18, 0xFF	; 255
 874:	fc 01       	movw	r30, r24
 876:	20 83       	st	Z, r18
 878:	88 e2       	ldi	r24, 0x28	; 40
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	fc 01       	movw	r30, r24
 87e:	10 82       	st	Z, r1
	
	//=========Timing===========//
	TimerSet(tasksPeriodGCD);
 880:	82 e3       	ldi	r24, 0x32	; 50
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	a0 e0       	ldi	r26, 0x00	; 0
 886:	b0 e0       	ldi	r27, 0x00	; 0
 888:	bc 01       	movw	r22, r24
 88a:	cd 01       	movw	r24, r26
 88c:	f1 dd       	rcall	.-1054   	; 0x470 <TimerSet>
	TimerOn();
 88e:	9d dc       	rcall	.-1734   	; 0x1ca <TimerOn>
	
	//=========USART===========//
	initUSART(0);
 890:	80 e0       	ldi	r24, 0x00	; 0
 892:	1a dc       	rcall	.-1996   	; 0xc8 <initUSART>
 894:	ff cf       	rjmp	.-2      	; 0x894 <main+0x284>

00000896 <_exit>:
	
	while(1) {
		
	}
 896:	f8 94       	cli

00000898 <__stop_program>:
 898:	ff cf       	rjmp	.-2      	; 0x898 <__stop_program>
